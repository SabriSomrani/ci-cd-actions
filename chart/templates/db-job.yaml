apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Values.Deployment.Name }}-db-job"
  namespace: {{ .Values.Namespace }}
  {{- with .Values.Deployment.annotations }}
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded
   {{- range $key, $value := . }}
   {{- printf "%s: %s" $key (tpl $value $ | squote) | nindent 4 }}
   {{- end }}
  {{- end }}
spec:
  template:
    metadata:
      labels:
        app: {{ .Values.Deployment.Name }}
    spec:
      containers:
      - name: {{ .Values.Deployment.Name }}-db-job
        image: "{{ .Values.Deployment.Image }}:{{ .Values.Deployment.Tag }}"
        imagePullPolicy: {{ .Values.Deployment.imagePullPolicy | quote }}
        command: [ "/bin/sh" ]
        args: [ "-c" , "rake db:create && rake db:migrate" ]
        env:
          {{- range $name, $value := .Values.Deployment.env }}
          - name: {{ $name }}
            value: {{ $value | quote }}
          {{- end }}
        envFrom:
         - secretRef:
            name: {{ .Values.Secrets.database }}
         - secretRef:
             name: "{{ .Values.Deployment.Name }}-secrets"
      restartPolicy: "OnFailure"


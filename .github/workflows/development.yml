name: Build and Test Docker Image

on:
  pull_request:
  push:
    branches:
      - actions

env:
  DATABASE_PASSWORD: postgres
  DATABASE_USERNAME: postgres
  DATABASE_HOST: 172.17.0.1

jobs:
  build-image:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@master

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-single-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-single-buildx

    - name: Build Test image
      uses: docker/build-push-action@v2
      with:
        context: .
        builder: ${{ steps.buildx.outputs.name }}
        file: Dockerfile
        push: false
        tags: projects/myproject:local
        build-args: |
          RUBY_VERSION=2.5.8
          NODE_MAJOR=14
          PG_MAJOR=13
          BUNDLER_VERSION=2.3.7
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new
        outputs: type=docker,dest=/tmp/docker-image.tar

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: docker-image
        path: /tmp/docker-image.tar

    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  use-and-test:
    name: Run tests
    runs-on: ubuntu-latest
    needs: [build-image]
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: ${{ env.DATABASE_USERNAME }}
          POSTGRES_PASSWORD: ${{ DATABASE_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Download built docker image
        uses: actions/download-artifact@v2
        with:
          name: docker-image
          path: /tmp

      - name: Load image
        run: |
          docker load --input /tmp/docker-image.tar

      - name: Run Tests
        run: |
          docker run --rm --env DATABASE_PASSWORD=${{env.DATABASE_PASSWORD}} --env DATABASE_USERNAME=${{env.DATABASE_USERNAME}} --env DATABASE_HOST=${{env.DATABASE_HOST}} projects/myproject:local /bin/bash -c "bundle exec rake db:test:prepare && bundle exec rspec spec"

  linter:
    name: Run Linter
    runs-on: ubuntu-latest
    needs: [build-image]
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Download built docker image
        uses: actions/download-artifact@v2
        with:
          name: docker-image
          path: /tmp

      - name: Load image
        run: |
          docker load --input /tmp/docker-image.tar

      - name: Run Linter
        run: |
          docker run --rm projects/myproject:local bundle exec rubocop --parallel --fail-level convention -c .rubocop.yml
